{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Application": {
      "metadata": {
        "description": "Descriptions of what application this VM is used for.  The tag 'Application' will be set to this value."
      },
      "type": "string"
    },
    "DevOpsStorageAccountAccessKey": {
      "type": "securestring"
    },
    "DevOpsStorageAccountName": {
      "type": "string"
    },
    "DevOpsStorageAccountContainerName": {
      "type": "string"
    },
    "Domain": {
      "type": "string"
    },
    "EnvironmentId": {
      "type": "string"
    },
    "Environment": {
      "type": "string"
    },
    "Geo": {
      "type": "string"
    },
    "Country": {
      "type": "string"
    },
    "Location": {
      "type": "string"
    },
    "Offer": {
      "type": "string"
    },
    "OMSResourceGroup": {
      "type": "string"
    },
    "OMSSubscriptionID": {
      "type": "string"
    },
    "OMSWorkspaceName": {
      "type": "string"
    },
    "OrganizationalUnit": {
      "type": "string"
    },
    "PodDomainServicePassword": {
      "type": "securestring"
    },
    "PodDomainServiceUser": {
      "type": "string"
    },
    "Publisher": {
      "type": "string"
    },
    "ServerCount": {
      "type": "int"
    },
    "ServerNames": {
      "type": "array"
    },
    "Sku": {
      "type": "string"
    },
    "StarsLifeCycle": {
      "type": "string"
    },
    "StarsPOD": {
      "type": "string"
    },
    "SubnetRef": {
      "type": "string"
    },
    "TimeZone": {
      "type": "string"
    },
    "Version": {
      "type": "string"
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_F8s"
    },
    "VmAdminPassword": {
      "type": "securestring"
    },
    "VmAdminUsername": {
      "type": "string"
    },
    "ManagedDiskAccountType": {
      "type": "string"
    },
    "DataDisk1SizeGB": {
      "type": "int"
    },
    "BACExistingVirtualMachinesResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource group where the virtual machines are located. This can be different than resource group of the vault. "
      }
    },
    "BACRecoveryServicesVaultName": {
      "type": "string",
      "metadata": {
        "description": "Recovery services vault name where the VMs will be backed up to. "
      }
    },
    "BACRecoveryServicesVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Recovery services vault name where the VMs will be backed up to. "
      }
    },
    "BACBackupPolicy": {
      "type": "string",
      "defaultValue": "DefaultPolicy",
      "metadata": {
        "description": "Backup policy to be used to backup VMs. Backup POlicy defines the schedule of the backup and how long to retain backup copies. By default every vault comes with a 'DefaultPolicy' which canbe used here."
      }
    },
    "TagsBillingCode": {
      "type": "string"
    },
    "TagsContacts": {
      "type": "string"
    },
    "TagsMemberFirm": {
      "type": "string"
    },
    "TagsFunction": {
      "type": "string"
    },
    "TagsCS": {
      "type": "string"
    },
    "TagsAppID": {
      "type": "string"
    },
    "TagsRequestID": {
      "type": "string"
    },
    "TagsAddendum": {
      "type": "string"
    }
  },
  "variables": {
    "OMSResourceID": "[resourceId(parameters('OMSSubscriptionId'), parameters('OMSResourceGroup'), 'Microsoft.OperationalInsights/workspaces/', parameters('OMSWorkspaceName'))]",
    "Description": "[concat(parameters('EnvironmentId'),' Build Server')]", 
    "backupFabric": "Azure",
    "v2VmType": "Microsoft.Compute/virtualMachines",
    "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
    "v2Vm": "vm;iaasvmcontainerv2;",
    "singleQuote": "'",
    "scriptName": "setup_buildserver.sh",
    "cloudcriptArgs": "[concat(variables('singleQuote'),parameters('Domain'),variables('singleQuote'),' ',variables('singleQuote'),parameters('EnvironmentId'),variables('singleQuote'),' ',variables('singleQuote'),parameters('StarsLifeCycle'),variables('singleQuote'),' ',variables('singleQuote'),parameters('StarsPOD'),variables('singleQuote'))]"
  },
  "resources": [
    {
      "name": "[parameters('ServerNames')[copyIndex()]]",
      "tags": {
        "AppID": "[parameters('TagsAppID')]",
        "BILLINGCODE": "[parameters('TagsBillingCode')]",
        "CONTACTS": "[parameters('TagsContacts')]",
        "CS": "[parameters('TagsCS')]",
        "FUNCTION": "[parameters('TagsFunction')]",
        "MEMBERFIRM": "[parameters('TagsMemberFirm')]",
        "ADDENDUM": "[parameters('TagsAddendum')]",
        "REQUESTID": "[parameters('TagsRequestID')]"
      },
      "copy": {
        "name": "BuildServerCopy",
        "count": "[parameters('ServerCount')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-12-01",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',concat(parameters('ServerNames')[copyIndex()],'-nic'))]",
        "[concat('Microsoft.Compute/disks/',concat(parameters('ServerNames')[copyIndex()],'-datadisk1'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('ServerNames')[copyIndex()]]",
          "adminUsername": "[parameters('VmAdminUsername')]",
          "adminPassword": "[parameters('VmAdminPassword')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('Publisher')]",
            "offer": "[parameters('Offer')]",
            "sku": "[parameters('Sku')]",
            "version": "[parameters('Version')]"
          },
          "osDisk": {
            "name": "[concat(parameters('ServerNames')[copyIndex()],'-osdisk')]",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('ManagedDiskAccountType')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "lun": 0,
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('ServerNames')[copyIndex()],'-datadisk1'))]"
              },
              "caching": "None",
              "createOption": "Attach"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('ServerNames')[copyIndex()],'-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CustomScriptExtension",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2017-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('ServerNames')[copyIndex()])]"
          ],
          "tags": {
            "AppID": "[parameters('TagsAppID')]",
            "BILLINGCODE": "[parameters('TagsBillingCode')]",
            "CONTACTS": "[parameters('TagsContacts')]",
            "CS": "[parameters('TagsCS')]",
            "FUNCTION": "[parameters('TagsFunction')]",
            "MEMBERFIRM": "[parameters('TagsMemberFirm')]",
            "ADDENDUM": "[parameters('TagsAddendum')]",
            "REQUESTID": "[parameters('TagsRequestID')]"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat('https://',parameters('DevOpsStorageAccountName'),'.blob.core.windows.net/',parameters('DevOpsStorageAccountContainerName'),'/setup_buildserver.sh')]",
                "[concat('https://',parameters('DevOpsStorageAccountName'),'.blob.core.windows.net/',parameters('DevOpsStorageAccountContainerName'),'/setup_installvstsagent.sh')]",
                "[concat('https://',parameters('DevOpsStorageAccountName'),'.blob.core.windows.net/',parameters('DevOpsStorageAccountContainerName'),'/dotnet-install.sh')]",
                "[concat('https://',parameters('DevOpsStorageAccountName'),'.blob.core.windows.net/',parameters('DevOpsStorageAccountContainerName'),'/setup_cleanupcron.sh')]",
                "[concat('https://',parameters('DevOpsStorageAccountName'),'.blob.core.windows.net/',parameters('DevOpsStorageAccountContainerName'),'/vsts-agent-linux-x64-2.129.0.tar.gz')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ',variables('scriptName'),' ',variables('cloudcriptArgs'))]",
              "storageAccountName": "[parameters('DevOpsStorageAccountName')]",
              "storageAccountKey": "[parameters('DevOpsStorageAccountAccessKey')]"
            }
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.EnterpriseCloud.Monitoring",
          "apiVersion": "2017-12-01",
          "location": "[parameters('Location')]",
          "tags": {
            "displayName": "OMSAgentForLinux",
            "AppID": "[parameters('TagsAppID')]",
            "BILLINGCODE": "[parameters('TagsBillingCode')]",
            "CONTACTS": "[parameters('TagsContacts')]",
            "CS": "[parameters('TagsCS')]",
            "FUNCTION": "[parameters('TagsFunction')]",
            "MEMBERFIRM": "[parameters('TagsMemberFirm')]",
            "ADDENDUM": "[parameters('TagsAddendum')]",
            "REQUESTID": "[parameters('TagsRequestID')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('ServerNames')[copyIndex()])]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "OmsAgentForLinux",
            "typeHandlerVersion": "1.9",
            "settings": {
              "workspaceId": "[reference(variables('OMSResourceID'), '2015-03-20').customerId]"
            },
            "protectedSettings": {
              "workspaceKey": "[listKeys(variables('OMSResourceID'), '2015-03-20').primarySharedKey]"
            }
          }
        }
      ]
    },
    {
      "name": "[concat(parameters('ServerNames')[copyIndex()],'-datadisk1')]",
      "copy": {
        "name": "DiskCopy",
        "count": "[parameters('ServerCount')]"
      },
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('Location')]",
      "tags": {
        "AppID": "[parameters('TagsAppID')]",
        "BILLINGCODE": "[parameters('TagsBillingCode')]",
        "CONTACTS": "[parameters('TagsContacts')]",
        "CS": "[parameters('TagsCS')]",
        "FUNCTION": "[parameters('TagsFunction')]",
        "MEMBERFIRM": "[parameters('TagsMemberFirm')]",
        "ADDENDUM": "[parameters('TagsAddendum')]",
        "REQUESTID": "[parameters('TagsRequestID')]"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "accountType": "[parameters('ManagedDiskAccountType')]",
        "DiskSizeGB": "[parameters('DataDisk1SizeGB')]"
      }
    },
    {
      "name": "[concat(parameters('ServerNames')[copyIndex()],'-nic')]",
      "copy": {
        "name": "NicCopy",
        "count": "[parameters('ServerCount')]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[parameters('Location')]",
      "tags": {
        "AppID": "[parameters('TagsAppID')]",
        "BILLINGCODE": "[parameters('TagsBillingCode')]",
        "CONTACTS": "[parameters('TagsContacts')]",
        "CS": "[parameters('TagsCS')]",
        "FUNCTION": "[parameters('TagsFunction')]",
        "MEMBERFIRM": "[parameters('TagsMemberFirm')]",
        "ADDENDUM": "[parameters('TagsAddendum')]",
        "REQUESTID": "[parameters('TagsRequestID')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[parameters('SubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('ServerNames')[copyIndex()],'-BackupVM')]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('BACRecoveryServicesVaultResourceGroup')]",
      "apiVersion": "2017-05-10",
      "copy": {
        "name": "BackupVMCopy",
        "count": "[parameters('ServerCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[concat(parameters('BACRecoveryServicesVaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('BACExistingVirtualMachinesResourceGroup'),';',parameters('ServerNames')[copyIndex()]), '/', variables('v2Vm'), concat(parameters('BACExistingVirtualMachinesResourceGroup'),';',parameters('ServerNames')[copyIndex()]))]",
              "apiVersion": "2016-06-01",
              "location": "[parameters('Location')]",
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
              "properties": {
                "protectedItemType": "[variables('v2VmType')]",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies',parameters('BACRecoveryServicesVaultName'),parameters('BACBackupPolicy') )]",
                "sourceResourceId": "[resourceId(subscription().subscriptionId,parameters('BACExistingVirtualMachinesResourceGroup'),'Microsoft.Compute/virtualMachines',parameters('ServerNames')[copyIndex()])]"
              }
            }
          ]
        }
      }
    }
  ]
}